package controlador.comer;

import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Iterator;
import modelo.*;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.collection.PersistentSet;
import util.FechaUtil;
import util.HibernateUtil;
import util.NTupla;
import vista.comer.pantallaConsultarObra;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Proyecto2010_Requerimientos-iuga
//  @ File Name : GestorConsultarObra.java
//  @ Date : 14/06/2010
//  @ Author : 
//
//

public class GestorConsultarObra {
    private PedidoObra pedidoObra;
    private Planta planta;
    private ContactoResponsable contacto;
    private Telefono telefonos;
    private Integer porcentaje;
    private EmpresaCliente empresaCliente;
    private SimpleDateFormat formato;
    private final pantallaConsultarObra pantalla;
    private Localidad localidad;
    private Provincia provincia;
    private Localidad localidadPlanta;
    private Provincia provinciaPlanta;


    public GestorConsultarObra(pantallaConsultarObra aThis, int id) {
        this.pantalla = aThis;
        formato = new SimpleDateFormat("dd/MM/yyyy");
        this.getPedidoObra(id);
        this.buscarDatosPlanta();
        this.buscarEmpresaCliente();
    }


    public void consultarObra() {

    }

    private void getPedidoObra(int id) {
        try{
            SessionFactory sf = HibernateUtil.getSessionFactory();
            Session sesion = sf.openSession();
            sesion.beginTransaction();
            this.pedidoObra = (PedidoObra)sesion.load(PedidoObra.class, id);
            sesion.getTransaction().commit();
        }
        catch(Exception e){
            System.out.println("ERROR:"+e.getMessage()+"|");
            HibernateUtil.rollbackTransaction();
            e.printStackTrace();
        }
    }

    public void buscarDatosPlanta() {
            this.planta = pedidoObra.getPlanta();

    }

    public void buscarContactoYTelefono() {

    }

    public void buscarEmpresaCliente() {
        try{
            HibernateUtil.beginTransaction();
            BigDecimal idEC = (BigDecimal)HibernateUtil.getSession().createSQLQuery("select ID_EMPRESA from PLANTA where ID_PLANTA="+this.planta.getId()).uniqueResult();
            this.empresaCliente = (EmpresaCliente)HibernateUtil.getSession().load(EmpresaCliente.class,idEC.intValue());
            HibernateUtil.commitTransaction();
        }
        catch(Exception e){
            System.out.println("ERROR:"+e.getMessage()+"|");
            HibernateUtil.rollbackTransaction();
            e.printStackTrace();
       }
    }


    public String mostrarNombreObra(){
        return this.pedidoObra.getNombre();
    }

    public String mostrarDescripcionObra(){
        return this.pedidoObra.getDescripcion();
    }

    public String mostrarFechaRegistro(){
        return formato.format(this.pedidoObra.getFechaDeRegistro());
    }

    public String mostrarPresupuestoMaximo(){
        return ""+this.pedidoObra.getPresupuestoMaximo();
    }

    public String mostrarRazonSocialPlanta(){
        return this.planta.getRazonSocial();
    }

    public String mostrarCallePlanta(){
        return this.planta.getDomicilio().getCalle();
    }

    public String mostrarNumeroPlanta(){
        return ""+this.planta.getDomicilio().getNumero();
    }

    public String mostrarPisoPlanta(){
        return ""+this.planta.getDomicilio().getPiso();
    }

    public String mostrarDptoPlanta(){
        return this.planta.getDomicilio().getDepto();
    }

    public String mostrarCPPlanta(){
        return this.planta.getDomicilio().getCodigoPostal();
    }

    public String mostrarPaisPlanta(){
        Pais p = null;
        try{
            HibernateUtil.beginTransaction();
            BigDecimal idEC = (BigDecimal)HibernateUtil.getSession().createSQLQuery("select PAIS_ID from PROVINCIA where IDPROVINCIA="+this.provinciaPlanta.getId()).uniqueResult();
            p = (Pais)HibernateUtil.getSession().load(Pais.class,idEC.intValue());
            HibernateUtil.commitTransaction();
        }
        catch(Exception e){
            System.out.println("ERROR:"+e.getMessage()+"|");
            HibernateUtil.rollbackTransaction();
            e.printStackTrace();
       }
       return p.getNombre();
    }

    public String mostrarProvinciaPlanta(){
        Provincia p = null;
        try{
            HibernateUtil.beginTransaction();
            BigDecimal idEC = (BigDecimal)HibernateUtil.getSession().createSQLQuery("select PROVINCIA_ID from LOCALIDAD where IDLOCALIDAD="+this.localidadPlanta.getId()).uniqueResult();
            p = (Provincia)HibernateUtil.getSession().load(Provincia.class,idEC.intValue());
            HibernateUtil.commitTransaction();
        }
        catch(Exception e){
            System.out.println("ERROR:"+e.getMessage()+"|");
            HibernateUtil.rollbackTransaction();
            e.printStackTrace();
       }
        this.provinciaPlanta = p;
       return p.getNombre();
    }

    public String mostrarLocalidadPlanta(){
        Localidad l = null;
        try{
            HibernateUtil.beginTransaction();
            BigDecimal idEC = (BigDecimal)HibernateUtil.getSession().createSQLQuery("select LOCALIDAD_ID from BARRIO where IDBARRIO="+this.planta.getDomicilio().getBarrio().getId()).uniqueResult();
            l = (Localidad)HibernateUtil.getSession().load(Localidad.class,idEC.intValue());
            HibernateUtil.commitTransaction();
        }
        catch(Exception e){
            System.out.println("ERROR:"+e.getMessage()+"|");
            HibernateUtil.rollbackTransaction();
            e.printStackTrace();
       }
        this.localidadPlanta = l;
       return l.getNombre();
    }

    public String mostrarBarrioPlanta(){
        return this.planta.getDomicilio().getBarrio().getNombre();
    }

    public String mostrarRazonSocialEC(){
        return this.empresaCliente.getRazonSocial();
    }

    public String mostrarCUITEC(){
        return this.empresaCliente.getCuit();
    }

    public String mostrarDireccionEC(){
        return this.empresaCliente.getDomicilio().toString();
    }

    public String mostrarBarrioEC(){
       return this.empresaCliente.getDomicilio().getBarrio().getNombre();
    }

    public String mostrarLocalidadEC(){
        Localidad l = null;
        try{
            //SessionFactory sf = HibernateUtil.getSessionFactory();
            //Session sesion = sf.openSession();
            //sesion.beginTransaction();
            HibernateUtil.beginTransaction();
            BigDecimal idEC = (BigDecimal)HibernateUtil.getSession().createSQLQuery("select LOCALIDAD_ID from BARRIO where IDBARRIO="+this.empresaCliente.getDomicilio().getBarrio().getId()).uniqueResult();
            l = (Localidad)HibernateUtil.getSession().load(Localidad.class,idEC.intValue());
            //sesion.getTransaction().commit();
            HibernateUtil.commitTransaction();
        }
        catch(Exception e){
            System.out.println("ERROR:"+e.getMessage()+"|");
            HibernateUtil.rollbackTransaction();
            e.printStackTrace();
       }
        this.localidad = l;
       return l.getNombre();
    }

    public String mostrarProvinciaEC(){
        Provincia p = null;
        try{
            HibernateUtil.beginTransaction();
            BigDecimal idEC = (BigDecimal)HibernateUtil.getSession().createSQLQuery("select PROVINCIA_ID from LOCALIDAD where IDLOCALIDAD="+this.localidad.getId()).uniqueResult();
            p = (Provincia)HibernateUtil.getSession().load(Provincia.class,idEC.intValue());
            HibernateUtil.commitTransaction();
        }
        catch(Exception e){
            System.out.println("ERROR:"+e.getMessage()+"|");
            HibernateUtil.rollbackTransaction();
            e.printStackTrace();
       }
        this.provincia = p;
       return p.getNombre();
    }

    public String mostrarPaisEC(){
        Pais p = null;
        try{
            HibernateUtil.beginTransaction();
            BigDecimal idEC = (BigDecimal)HibernateUtil.getSession().createSQLQuery("select PAIS_ID from PROVINCIA where IDPROVINCIA="+this.provincia.getId()).uniqueResult();
            p = (Pais)HibernateUtil.getSession().load(Pais.class,idEC.intValue());
            HibernateUtil.commitTransaction();
        }
        catch(Exception e){
            System.out.println("ERROR:"+e.getMessage()+"|");
            HibernateUtil.rollbackTransaction();
            e.printStackTrace();
       }
       return p.getNombre();
    }

    public HashSet<NTupla> mostrarTelefonosEC() {
        HashSet<NTupla> retorno = new HashSet<NTupla>();
//        SessionFactory sf = HibernateUtil.getSessionFactory();
//        Session sesion = sf.openSession();
//        sesion.beginTransaction();
        PersistentSet tels = (PersistentSet) this.empresaCliente.getTelefonos();
//        sesion.getTransaction().commit();
        for (Object telefono : tels) {
            Telefono t = (Telefono)telefono;
            NTupla nt = new NTupla();
            nt.setId(t.getId());
            nt.setNombre(t.getTipo().getNombre());
            nt.setData(t.getNumero());
            retorno.add(nt);
        }
        return retorno;
    }

//    public String mostrarNombreCompletoContacto(){
//        if(this.planta.getContacto() != null)
//            return this.planta.getContacto().getApellido()+", "+this.planta.getContacto().getNombre();
//        else
//            return "";
//    }

    public String mostrarEmailContacto(){
        if(this.planta.getContacto() != null)
            return this.planta.getContacto().getEmail();
        else
            return "";
    }

    public HashSet<NTupla> mostrarTelefonosContacto(){
        if(this.planta.getContacto() != null){
            HashSet<NTupla> retorno = new HashSet<NTupla>();
//            PersistentSet tels = (PersistentSet) this.planta.getContacto().getTelefonos();
//            for (Object telefono : tels) {
//                Telefono t = (Telefono)telefono;
//                NTupla nt = new NTupla();
//                nt.setId(t.getId());
//                nt.setNombre(t.getTipo().getNombre());
//                nt.setData(t.getNumero());
//                retorno.add(nt);
//            }
            return retorno;
        }
        else{
            return null;
        }
    }

    public String mostrarFechaInicio() {
        return FechaUtil.getFecha(this.pedidoObra.getFechaInicio());
    }

    public String mostrarFechaFin() {
        return FechaUtil.getFecha(this.pedidoObra.getFechaFin());
    }

    public String mostrarFormaPago() {
        return this.pedidoObra.getFormaPago().getNombre();
    }

    public ArrayList<NTupla> mostrarCR(){
        Iterator<ContactoResponsable> ic = pedidoObra.getContactos().iterator();
        ArrayList<NTupla> nc = new ArrayList<NTupla>();
        while(ic.hasNext()){
            ContactoResponsable cr = ic.next();
            NTupla nt = new NTupla();
            nt.setNombre(cr.getNombre());
            String datos[] = {cr.getRol().getNombre(),cr.getTelefono().getTipo().getNombre()+": "+cr.getTelefono().getNumero()};
            nt.setData(datos);
            nc.add(nt);
        }
        return nc;
    }
}
