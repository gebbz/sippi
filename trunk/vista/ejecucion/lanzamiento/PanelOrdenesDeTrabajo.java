/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.ejecucion.lanzamiento;

import controlador.ejecucion.lanzamiento.GestorVentanaLanzamiento;
import java.util.AbstractList;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import util.NTupla;
import util.SwingPanel;
import util.TablaUtil;
import vista.compras.GestionarStock;
import vista.compras.RegistrarRecepcionDeRecursos;
import vista.util.MyComboBoxEditor;

/**
 *
 * @author Administrador
 */
public class PanelOrdenesDeTrabajo extends javax.swing.JPanel {

    public static final int TABLA_ODC_COLUMNA_NUNERO = 0;
    public static final int TABLA_ODC_COLUMNA_NOMBRE = 1;
    
    private static final int TABLA_DEFAULT_ALTO = 25;

    private GestorVentanaLanzamiento gestor;
    
    /**
     * Creates new form PanelMateriales
     */
    public PanelOrdenesDeTrabajo(GestorVentanaLanzamiento gestor) {
        this.gestor = gestor;
        initComponents();
        initTabla();
        //cargarDatosTablaParaObra();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrdenesDeTrabajo = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btnGenerarOrdenDeCompra = new javax.swing.JButton();
        btnGenerarOrdenDeCompra1 = new javax.swing.JButton();

        tblOrdenesDeTrabajo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"P001-0000-1", "Desconexionado de Tolva"},
                {"P001-0000-2", "Pintado de Estructura"},
                {"P001-0000-3", "Entrega al Cliente"}
            },
            new String [] {
                "Número de la Orden de Trabajo", "Nombre de la Tarea"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblOrdenesDeTrabajo.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tblOrdenesDeTrabajo);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Acciones sobre las Ordenes de Trabajo:"));

        btnGenerarOrdenDeCompra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/iconos/var/16x16/List.png"))); // NOI18N
        btnGenerarOrdenDeCompra.setText("<HTML>Emitir <b>Todas</b> las Ordenes de Trabajo");
        btnGenerarOrdenDeCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarOrdenDeCompraActionPerformed(evt);
            }
        });

        btnGenerarOrdenDeCompra1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/iconos/var/16x16/List.png"))); // NOI18N
        btnGenerarOrdenDeCompra1.setText("<HTML>Emitir las Ordenes de Trabajo <b>Seleccionadas</b>");
        btnGenerarOrdenDeCompra1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarOrdenDeCompra1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnGenerarOrdenDeCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGenerarOrdenDeCompra1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnGenerarOrdenDeCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnGenerarOrdenDeCompra1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 632, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenerarOrdenDeCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarOrdenDeCompraActionPerformed

    }//GEN-LAST:event_btnGenerarOrdenDeCompraActionPerformed

    private void btnGenerarOrdenDeCompra1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarOrdenDeCompra1ActionPerformed
        // Armo una lista con los IDS de las tareas Ejecucion que van a emitirse
        List<Integer> listaOrdenesTrabajo = new ArrayList<Integer>();

        DefaultTableModel modelo = (DefaultTableModel)tblOrdenesDeTrabajo.getModel();
            if(tblOrdenesDeTrabajo.getSelectedRows().length>0){
                for (int i = 0; i < tblOrdenesDeTrabajo.getSelectedRows().length; i++) {
                    int filaSeleccionada = tblOrdenesDeTrabajo.getSelectedRows()[i];
                    NTupla ntp = (NTupla) modelo.getValueAt(filaSeleccionada,0);
                    listaOrdenesTrabajo.add(ntp.getId());
                }
            }else{
                mostrarMensaje(JOptionPane.INFORMATION_MESSAGE,"Atencion!","<HTML>Seleccione <b>una o más Ordenes de Trabajo</b> para emitirlas");
            }
        
        // MANDO A LA GENERACION DEL REPORTE CON ESTA LISTA COMO ENTRADA
    }//GEN-LAST:event_btnGenerarOrdenDeCompra1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerarOrdenDeCompra;
    private javax.swing.JButton btnGenerarOrdenDeCompra1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblOrdenesDeTrabajo;
    // End of variables declaration//GEN-END:variables

    private void initTabla() {
        tblOrdenesDeTrabajo.setRowHeight(TABLA_DEFAULT_ALTO);
        DefaultTableModel modelo = (DefaultTableModel) tblOrdenesDeTrabajo.getModel();

        // Ancho de Columnas
        int anchoColumna = 0;
        TableColumnModel modeloColumna = tblOrdenesDeTrabajo.getColumnModel();
        TableColumn columnaTabla;
        for (int i = 0; i < tblOrdenesDeTrabajo.getColumnCount(); i++) {
            columnaTabla = modeloColumna.getColumn(i);
            switch (i) {
                case TABLA_ODC_COLUMNA_NUNERO:
                    anchoColumna = 300;
                    break;
                case TABLA_ODC_COLUMNA_NOMBRE:
                    anchoColumna = 400;
                    break;
            }
            columnaTabla.setPreferredWidth(anchoColumna);
            columnaTabla.setWidth(anchoColumna);
        }
    }

    /**
     * Muestra un mensaje
     * @param tipo
     * @param titulo
     * @param mensaje 
     */
    public void mostrarMensaje(int tipo,String titulo,String mensaje)
    {
         JOptionPane.showMessageDialog(this.getParent(),mensaje,titulo,tipo);
    }

    private void cargarDatosTablaParaObra() {
        
        List<NTupla> tuplas = gestor.llenarTablaPanelMateriales();
        DefaultTableModel modelo = (DefaultTableModel)tblOrdenesDeTrabajo.getModel();
        TablaUtil.vaciarDefaultTableModel(modelo);
        
        // El ID de la Tupla es el ID de la Tarea Ejecución !!!
        for (int i = 0; i < tuplas.size(); i++) {
            NTupla nTupla = tuplas.get(i);
            Object[] fila = new Object[5];
            fila[TABLA_ODC_COLUMNA_NUNERO] = nTupla;
            
                String[] data = (String[]) nTupla.getData();
            
            fila[TABLA_ODC_COLUMNA_NOMBRE] = data[0];
            modelo.addRow(fila);
        }
        
    }

    /**
     * Actualiza los datos de la tabla
     */
    void actualizarDatos() {
        cargarDatosTablaParaObra();
    }
}
