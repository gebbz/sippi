package vista.ejecucion.lanzamiento;

import controlador.ejecucion.lanzamiento.GestorVentanaLanzamiento;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import util.NTupla;
import util.TablaUtil;

/**
 *
 * @author Iuga
 */
public class PanelHerramientas extends javax.swing.JPanel {

    public static final int TABLA_HERRAMIENTAS_COLUMNA_NOMBRE = 0;
    public static final int TABLA_HERRAMIENTAS_COLUMNA_HORAS = 1;
    public static final int TABLA_HERRAMIENTAS_COLUMNA_ESTADO = 2;
    public static final int TABLA_HERRAMIENTAS_COLUMNA_SELECCION = 3;
    
    private static final int TABLA_DEFAULT_ALTO = 25;    
       
    private GestorVentanaLanzamiento gestor;
    
    /**
     * Creates new form PanelHerramientas
     */
    public PanelHerramientas(GestorVentanaLanzamiento gestor) {
        this.gestor = gestor;
        initComponents();
        initTabla();
        cargarDatosTablaParaObra();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHerramientas = new javax.swing.JTable();
        btnGenerarOrdenDeCompra = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        tblHerramientas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Horas Planificadas", "Estado Herramienta", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHerramientas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tblHerramientas);

        btnGenerarOrdenDeCompra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/iconos/var/16x16/List.png"))); // NOI18N
        btnGenerarOrdenDeCompra.setText("Generar un Orden de Compra");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("O tal vez desea:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnGenerarOrdenDeCompra)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGenerarOrdenDeCompra)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerarOrdenDeCompra;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblHerramientas;
    // End of variables declaration//GEN-END:variables

    private void initTabla() {
        tblHerramientas.setRowHeight(TABLA_DEFAULT_ALTO);
        DefaultTableModel modelo = (DefaultTableModel) tblHerramientas.getModel();

        // Ancho de Columnas
        int anchoColumna = 0;
        TableColumnModel modeloColumna = tblHerramientas.getColumnModel();
        TableColumn columnaTabla;
        for (int i = 0; i < tblHerramientas.getColumnCount(); i++) {
            columnaTabla = modeloColumna.getColumn(i);
            switch (i) {
                case TABLA_HERRAMIENTAS_COLUMNA_ESTADO:
                    anchoColumna = 100;
                    break;
                case TABLA_HERRAMIENTAS_COLUMNA_NOMBRE:
                    anchoColumna = 300;
                    break;
                case TABLA_HERRAMIENTAS_COLUMNA_HORAS:
                    anchoColumna = 100;
                    break;
                case TABLA_HERRAMIENTAS_COLUMNA_SELECCION:
                    anchoColumna = 50;
                    break;
            }
            columnaTabla.setPreferredWidth(anchoColumna);
            columnaTabla.setWidth(anchoColumna);
        }
    }

    /**
     * Pide al gestor que busque todos los datos de las herramietnas que se
     * van a usar en esta obra.
     */
    private void cargarDatosTablaParaObra() {
        List<NTupla> tuplas = gestor.llenarTablaPanelHerramientas();
        DefaultTableModel modelo = (DefaultTableModel)tblHerramientas.getModel();
        TablaUtil.vaciarDefaultTableModel(modelo);
        
        for (int i = 0; i < tuplas.size(); i++) {
            NTupla nTupla = tuplas.get(i);
            Object[] fila = new Object[4];
            fila[0] = nTupla;
            
                String[] data = (String[]) nTupla.getData();
            
            fila[1] = data[0];
            fila[2] = data[1];
            fila[3] = false;
            modelo.addRow(fila);
        }
    }

}
