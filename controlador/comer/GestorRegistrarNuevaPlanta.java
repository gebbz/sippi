package controlador.comer;

import controlador.utiles.gestorBDvarios;
import controlador.utiles.gestorGeoLocalicacion;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import modelo.*;
import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import util.HibernateUtil;
import util.Tupla;
import vista.comer.pantallaRegistrarNuevaPlanta;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Proyecto2010_Requerimientos-iuga
//  @ File Name : GestorRegistrarNuevaPlanta.java
//  @ Date : 14/06/2010
//  @ Author : 
//
//




public class GestorRegistrarNuevaPlanta {

        private pantallaRegistrarNuevaPlanta pantalla;
	private ArrayList<Empresa> listaEmpresas;
	private String nombrePlanta;
	private String calle;
	private int altura;
	private int piso;
	private String depto;
        private String codigoPostal;
	private ArrayList<Pais> listaPais;
	private ArrayList<Provincia> listaProvincias;
	private ArrayList<Localidad> listaLocalidad;
	private ArrayList<Barrio> listaBarrio;
        private ArrayList<Telefono> listaTelefonos;
	private Pais pais;
	private Provincia provincia;
	private Localidad localidad;
	private Barrio barrio;

        public GestorRegistrarNuevaPlanta(pantallaRegistrarNuevaPlanta pantalla) {
            this.pantalla = pantalla;
            listaPais = new ArrayList<Pais>();
            listaBarrio = new ArrayList<Barrio>();
            listaLocalidad = new ArrayList<Localidad>();
            listaProvincias = new ArrayList<Provincia>();
        }
        
	public ArrayList<Tupla> mostrarEmpresasCliente() {

            ArrayList<Tupla> tuplas = new ArrayList<Tupla>();
            SessionFactory sf = HibernateUtil.getSessionFactory();
            Session sesion = sf.openSession();

            sesion.beginTransaction();
            Iterator iter = sesion.createQuery("from EmpresaCliente ec order by ec.razonSocial").iterate();
            while ( iter.hasNext() )
            {
                EmpresaCliente ec = (EmpresaCliente)iter.next();
                Tupla tupla = new Tupla(ec.getId(),ec.getRazonSocial());
                tuplas.add(tupla);
            }
            return tuplas;

	}

        public ArrayList<Tupla> mostrarTiposTelefono()
        {
            gestorBDvarios gaux = new gestorBDvarios();
            return gaux.getTiposDeTelefono();
        }

	public void empresaCliente() {
	
	}
	
	public void nombrePlanta(String nombre)
        {
            this.nombrePlanta = nombre;
	}
	
	public void telefonoPlanta(ArrayList<Telefono> lista) {
            this.listaTelefonos = lista;
	}
	
	public void DomicilioPlanta(String calle, int altura, int piso, String depto, String codigoPostal)
        {
            this.calle = calle;
            this.altura = altura;
            this.piso = piso;
            this.depto = depto;
            this.codigoPostal = codigoPostal;
	}
	
	public ArrayList<Tupla> mostrarPaises() {

           gestorGeoLocalicacion ggl = new gestorGeoLocalicacion();
           return ggl.getPaises();

	}
	
	public ArrayList<Tupla> mostrarProvincias(int idPais)
        {
           gestorGeoLocalicacion ggl = new gestorGeoLocalicacion();

            // GUARDO EL PAIS PARA CUANDO CREE
            this.pais = ggl.getPais(idPais);

           return ggl.getProvincias(idPais);
	}

        public ArrayList<Tupla> mostrarLocalidades(int idProvincia) {

           gestorGeoLocalicacion ggl = new gestorGeoLocalicacion();

            // GUARDO LA PROVINCIA PARA CUANDO CREE
            this.provincia = ggl.getProvincia(idProvincia);

           return ggl.getLocalidades(idProvincia);

	}

	public ArrayList<Tupla> mostrarBarrios(int idLocalidad) {

           gestorGeoLocalicacion ggl = new gestorGeoLocalicacion();
           return ggl.getBarrios(idLocalidad);

	}

        /*
         *  SETERS DE LA GEOPOSICION ---------------------------------------
         */

	public void paisPlanta(int idPais) {
           gestorGeoLocalicacion ggl = new gestorGeoLocalicacion();
            this.pais = ggl.getPais(idPais);
	}

	public void provinciaPlanta(int idProvincia) {
           gestorGeoLocalicacion ggl = new gestorGeoLocalicacion();
            this.provincia = ggl.getProvincia(idProvincia);
	}
	
	public void LocalidadPlanta(int idLocalidad) {
            gestorGeoLocalicacion ggl = new gestorGeoLocalicacion();
            this.localidad = ggl.getLocalidad(idLocalidad);
	}
	
	public void barrioPlanta(int idBarrio) {
            gestorGeoLocalicacion ggl = new gestorGeoLocalicacion();
            this.barrio = (Barrio)ggl.getBarrio(idBarrio);
	}
	
	public void PlantaConfirmada() {
	
	}

        public int PlantaConfirmadaSinEmpresa()
        {
            // GUARDO LA PLANTA, SIN LA EMPRESA
            Planta p = new Planta();
            p.setRazonSocial(this.nombrePlanta);
            p.setTelefonos(this.listaTelefonos);

            Domicilio d = new Domicilio();
            d.setBarrio((Barrio)barrio);
            d.setCalle(calle);
            d.setCodigoPostal(codigoPostal);
            d.setDepto(depto);
            d.setNumero(altura);
            d.setPiso(piso);
              p.setDomicilio(d);
            
                    SessionFactory sf = HibernateUtil.getSessionFactory();
                    Session sesion;
                    try {
                    sesion = HibernateUtil.getSession();

                    try{
                    HibernateUtil.beginTransaction();

                        sesion.save(d);

                        sesion.save(p);

                        HibernateUtil.commitTransaction();
                    }catch(Exception e) { 
                        System.out.println("No se pudo inicia la transaccion\n"+e.getMessage());
                        HibernateUtil.rollbackTransaction();
                }
                HibernateUtil.closeSession();
            } catch (Exception ex) { System.out.println("No se pudo abrir la sesion");  }
            return p.getId();

        }
	
	public void CrearPlanta() {
	
	}
	
	public void noConfirmacionRegistrarContacto() {
	
	}
}
