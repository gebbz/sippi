package modelo;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Proyecto2010_Requerimientos-iuga
//  @ File Name : PresupuestoBase.java
//  @ Date : 08/10/2010
//  @ Author : 
//
//

public class PresupuestoBase {
    private int id;
    private Date fechaEstimadaInicioObra;
    private Date fechaEstimadaFinObra;
    private String version;
    private List<Etapa> etapas;
    private float porcConsumibles;
    private float IVA;

    private double ganancia;
    private float consumibles;

    private double montoViaticos;
    private int cantEmpleadosViaticos;
    private int cantDiasViaticos;

    public void crear() {

    }

    public void mostrarPlanificacionObra() {

    }

    public void mostrarGrupoDeTrabajo() {

    }

    public void mostrarEtapas() {

    }

    public void CalcularMontoTotal() {

    }

    public PresupuestoBase() {
        this.etapas = new ArrayList<Etapa>();
    }

    public float getIVA() {
        return IVA;
    }

    public void setIVA(float IVA) {
        this.IVA = IVA;
    }

    public List<Etapa> getEtapas() {
        return etapas;
    }

    public void setEtapas(List<Etapa> etapas) {
        this.etapas = etapas;
    }

    public Date getFechaEstimadaFinObra() {
        return fechaEstimadaFinObra;
    }

    public void setFechaEstimadaFinObra(Date fechaEstimadaFinObra) {
        this.fechaEstimadaFinObra = fechaEstimadaFinObra;
    }

    public Date getFechaEstimadaInicioObra() {
        return fechaEstimadaInicioObra;
    }

    public void setFechaEstimadaInicioObra(Date fechaEstimadaInicioObra) {
        this.fechaEstimadaInicioObra = fechaEstimadaInicioObra;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public float getPorcConsumibles() {
        return porcConsumibles;
    }

    public void setPorcConsumibles(float porcConsumibles) {
        this.porcConsumibles = porcConsumibles;
    }

    public String getVersion() {
        return version;
    }

    public void setVersion(String version) {
        this.version = version;
    }

    public void addEtapa(Etapa e)
    {
        if(this.etapas==null)
        {
            this.etapas = new ArrayList<Etapa>();
        }
        this.etapas.add(e);
    }

    public float getConsumibles() {
        return consumibles;
    }

    public void setConsumibles(float consumibles) {
        this.consumibles = consumibles;
    }

    public double getGanancia() {
        return ganancia;
    }

    public void setGanancia(double ganancia) {
        this.ganancia = ganancia;
    }

    public int getCantDiasViaticos() {
        return cantDiasViaticos;
    }

    public void setCantDiasViaticos(int cantDiasViaticos) {
        this.cantDiasViaticos = cantDiasViaticos;
    }

    public int getCantEmpleadosViaticos() {
        return cantEmpleadosViaticos;
    }

    public void setCantEmpleadosViaticos(int cantEmpleadosViaticos) {
        this.cantEmpleadosViaticos = cantEmpleadosViaticos;
    }

    public double getMontoViaticos() {
        return montoViaticos;
    }

    public void setMontoViaticos(double montoViaticos) {
        this.montoViaticos = montoViaticos;
    }

    public double CalcularCostoViaticos()
    {
        return this.cantDiasViaticos*cantEmpleadosViaticos*montoViaticos;
    }

    public double CalcularTotal()
    {
        return this.CalcularCostoBase()+this.ganancia;
    }

    public double CalcularCostoBase()
    {
        double subtotal = CalcularCostoViaticos()+CalcularSubTotalEtapas();
        double porc = ((subtotal * consumibles )/100);
        return subtotal+porc;
    }

    private double CalcularSubTotalEtapas()
    {
        double monto=0;
        Iterator<Etapa> ite = this.etapas.iterator();
        while (ite.hasNext())
        {
            Etapa e = ite.next();
            monto+=e.calcularSubTotal();
        }
        return monto;
    }
    
}
