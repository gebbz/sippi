package modelo;

//
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import vista.planificacion.ArbolDeTareasTipos;

//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Proyecto2010_Requerimientos
//  @ File Name : TareaPlanificacion.java
//  @ Date : 14/01/2012
//  @ Author : 
//
//
public class TareaPlanificacion {

    private int id;
    private List<TareaPlanificacion> subtareas;
    private String nombre;
    private TipoTarea tipoTarea;
    private String observaciones;
    private List<AsignacionEmpleadoPlanificacion> asignacionesEmpleados;
    private List<PlanificacionXHerramienta> herramientas;
    private List<PlanificacionXMaterial> materiales;
    private List<PlanificacionXAlquilerCompra> alquilerCompras;
    private Date fechaInicio;
    private Date fechaFin;
    private int idTareaGantt;
    private SubObraXTareaModif tareaCotizada;
    
    //private HashMap recursos;//Esto esta para simplificar

    public TareaPlanificacion() {
        this.subtareas = new ArrayList<TareaPlanificacion>();
        this.asignacionesEmpleados = new ArrayList<AsignacionEmpleadoPlanificacion>();
        this.herramientas = new ArrayList<PlanificacionXHerramienta>();
        this.materiales = new ArrayList<PlanificacionXMaterial>();
        this.alquilerCompras = new ArrayList<PlanificacionXAlquilerCompra>();
        
        /*recursos.put(ArbolDeTareasTipos.TIPO_HERRAMIENTAS, herramientas);
        recursos.put(ArbolDeTareasTipos.TIPO_ASIGNACIONESEMPLEADOS, asignacionesEmpleados);
        recursos.put(ArbolDeTareasTipos.TIPO_MATERIALES, materiales);
        recursos.put(ArbolDeTareasTipos.TIPO_ALQUILERESCOMPRAS, alquilerCompras);*/
    }

    public List<PlanificacionXAlquilerCompra> getAlquilerCompras() {
        return alquilerCompras;
    }

    public void setAlquilerCompras(List<PlanificacionXAlquilerCompra> alquilerCompras) {
        this.alquilerCompras = alquilerCompras;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }


    public List<AsignacionEmpleadoPlanificacion> getAsignacionesEmpleados() {
        return asignacionesEmpleados;
    }

    public void setAsignacionesEmpleados(List<AsignacionEmpleadoPlanificacion> asignacionesEmpleados) {
        this.asignacionesEmpleados = asignacionesEmpleados;
    }

    public List<PlanificacionXHerramienta> getHerramientas() {
        return herramientas;
    }

    public void setHerramientas(List<PlanificacionXHerramienta> herramientas) {
        this.herramientas = herramientas;
    }

    public List<PlanificacionXMaterial> getMateriales() {
        return materiales;
    }

    public void setMateriales(List<PlanificacionXMaterial> materiales) {
        this.materiales = materiales;
    }

    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public String getObservaciones() {
        return observaciones;
    }

    public void setObservaciones(String observaciones) {
        this.observaciones = observaciones;
    }

    public List<TareaPlanificacion> getSubtareas() {
        return subtareas;
    }

    public void setSubtareas(List<TareaPlanificacion> subtareas) {
        this.subtareas = subtareas;
    }

    public TipoTarea getTipoTarea() {
        return tipoTarea;
    }

    public void setTipoTarea(TipoTarea tipoTarea) {
        this.tipoTarea = tipoTarea;
    }

    public Date getFechaFin() {
        return fechaFin;
    }

    public void setFechaFin(Date fechaFin) {
        this.fechaFin = fechaFin;
    }

    public Date getFechaInicio() {
        return fechaInicio;
    }

    public void setFechaInicio(Date fechaInicio) {
        this.fechaInicio = fechaInicio;
    }

    public int getOrden() {
        return idTareaGantt;
    }

    public void setOrden(int orden) {
        this.idTareaGantt = orden;
    }

    public int getIdTareaGantt() {
        return idTareaGantt;
    }

    public void setIdTareaGantt(int idTareaGantt) {
        this.idTareaGantt = idTareaGantt;
    }

    public SubObraXTareaModif getTareaCotizada() {
        return tareaCotizada;
    }

    public void setTareaCotizada(SubObraXTareaModif tareaCotizada) {
        this.tareaCotizada = tareaCotizada;
    }
    
    public void addSubTarea(TareaPlanificacion subTarea)
    {
        this.subtareas.add(subTarea);
    }
    public TareaPlanificacion buscarSubTarea(int idSubTarea)
    {
        TareaPlanificacion tarea=null;
        for (int i = 0; i < subtareas.size(); i++) {
            
            if(subtareas.get(i).getId()==idSubTarea)
            {
                tarea=subtareas.get(i);
                break;
            }
        }
        return tarea;
    }
    
    public TareaPlanificacion buscarSubTareaPorIdTareaCotizada(int idTarea)
    {
        TareaPlanificacion tarea=null;
        for (int i = 0; i < subtareas.size(); i++) {
            
            if(subtareas.get(i).getTareaCotizada().getId()==idTarea)
            {
                tarea=subtareas.get(i);
                break;
            }
            else
            {
                tarea=subtareas.get(i).buscarSubTareaPorIdTareaCotizada(idTarea);
                if(tarea!=null)
                {break;}
            }
        }
        return tarea;        
    }
    
    public boolean agregarMaterialCotizacion(SubObraXMaterialModif materialCotizacion)
    {        
        //Veo q no se repita
        for (int i = 0; i < materiales.size(); i++) {
            if(materiales.get(i).getMaterialCotizacion().getId()==materialCotizacion.getId())
            {
                return false;
            }
        }
        //Creo y agrego el recurso a la lista
        PlanificacionXMaterial pm=new  PlanificacionXMaterial(materialCotizacion);
        materiales.add(pm);
        return false;        
    }
    
    public boolean agregarHerramientaCotizacion(SubObraXHerramientaModif herramientaCotizacion)
    {        
        //Veo q no se repita
        for (int i = 0; i < herramientas.size(); i++) {
            if(herramientas.get(i).getHerramientaCotizacion().getId()==herramientaCotizacion.getId())
            {
                return false;
            }
        }
        //Creo y agrego el recurso a la lista
        PlanificacionXHerramienta ph=new  PlanificacionXHerramienta(herramientaCotizacion);
        herramientas.add(ph);
        return false;        
    }
    
    public boolean agregarAlquilerCompraCotizacion(SubObraXAlquilerCompraModif alquilerCompraCotizacion)
    {        
        //Veo q no se repita
        for (int i = 0; i < alquilerCompras.size(); i++) {
            if(alquilerCompras.get(i).getAlquilerCompraCotizacion().getId()==alquilerCompraCotizacion.getId())
            {
                return false;
            }
        }
        //Creo y agrego el recurso a la lista
        PlanificacionXAlquilerCompra ph=new  PlanificacionXAlquilerCompra(alquilerCompraCotizacion);
        alquilerCompras.add(ph);
        return false;        
    }
    
    public boolean tieneMaterialCotizacion(int idMaterialCotizacion)
    {
        for (int i = 0; i < materiales.size(); i++) {
            if(materiales.get(i).getMaterialCotizacion().getId()==idMaterialCotizacion)
            {
                return true;
            }
        }
        return false;        
    }
    public boolean tieneHerramientaCotizacion(int idHerramientaCotizacion)
    {
        for (int i = 0; i < herramientas.size(); i++) {
            if(herramientas.get(i).getHerramientaCotizacion().getId()==idHerramientaCotizacion)
            {
                return true;
            }
        }
        return false;        
    }
    
    public boolean tieneAlquilerCompraCotizacion(int idAlquilerCompraCotizacion)
    {
        for (int i = 0; i < alquilerCompras.size(); i++) {
            if(alquilerCompras.get(i).getAlquilerCompraCotizacion().getId()==idAlquilerCompraCotizacion)
            {
                return true;
            }
        }
        return false;        
    }
    
    
    /* Aca una idea sin terminar... ya fue, q venga nomas la horda de ifs
    public HashMap getRecursos()
    {return recursos;}    
    public boolean tieneRecursoCotizacion(int idRecurso, String tipoRecurso)
    {
        List<IRecursoCotizacion> listaRecursoTipoT;
        if(recursos.containsKey(tipoRecurso))
        {listaRecursoTipoT =  (List) recursos.get(recursos);    }
        else
        {return false;}
        for (int i = 0; i < listaRecursoTipoT.size(); i++) {
            if(listaRecursoTipoT.get(i).getAlquilerCompraCotizacion().getId()==idAlquilerCompraCotizacion)
            {
                return true;
            }
        }
        return false; 
    }*/
    
    
    
        
}
